name: java cd with gradle
on:
  workflow_run:
    workflows: [ "java ci with gradle" ]
    types: [ completed ]
  workflow_dispatch:

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: set up jdk 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: setup gradle
        uses: gradle/actions/setup-gradle@ec92e829475ac0c2315ea8f9eced72db85bb337a
      - name: make gradlew executable
        run: chmod +x ./gradlew
      - name: build with gradle wrapper
        run: ./gradlew build
      - name: configure aws credentials and region
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: 'us-east-1'
      - name: create application and deployment group
        run: |
          aws deploy create-application --application-name github-actions-codedeploy-application --region us-east-1
          aws deploy create-deployment-group \
            --application-name github-actions-codedeploy-application \
            --deployment-group-name github-actions-codedeploy-application-group \
            --region us-east-1 \
            --ec2-tag-filters Key=Name,Value=YOUR_EC2_INSTANCE_NAME,Type=KEY_AND_VALUE # Update with your EC2 instance name
      - name: deploy to aws codedeploy
        run: |
          aws deploy create-deployment \
            --application-name github-actions-codedeploy-application \
            --deployment-group-name github-actions-codedeploy-application-group \
            --s3-location bucket=your-bucket-name,key=your-key,bundleType=zip \
            --region us-east-1 \
            --description "deployment from github actions"